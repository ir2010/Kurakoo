{"version":3,"sources":["store/store.js","Component/SignUp/SignUp.js","Component/searchbar/SearchBar.js","Component/navbar/Navbar.js","Component/feedpage/FeedPage.js","Component/SignIn/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","toast","configure","SignUp","useState","name","setName","email","setEmail","password","setPassword","course","setCourse","year","setYear","college","setCollege","isSmallScreen","useMediaQuery","query","errorToast","message","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Grid","container","item","md","lg","className","src","alt","xs","sm","value","onChange","e","target","type","spacing","Number","onClick","test","success","PostData","SearchBar","rel","href","id","method","action","class","placeholder","required","Component","Navbar","FeedPage","SignIn","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"mYAOMA,EAAcC,0BAAgB,IAQ9BC,EAAa,CAACC,KAULC,EAPDC,sBACVL,EAPiB,GAUjBM,8BAAoBC,kBAAe,WAAf,EAAmBL,K,6CCf3CM,IAAMC,YAEN,IAwJeC,EAxJA,WAAI,MAESC,mBAAS,IAFlB,mBAERC,EAFQ,KAEFC,EAFE,OAGWF,mBAAS,IAHpB,mBAGRG,EAHQ,KAGDC,EAHC,OAIiBJ,mBAAS,IAJ1B,mBAIRK,EAJQ,KAIEC,EAJF,OAKaN,mBAAS,IALtB,mBAKRO,EALQ,KAKAC,EALA,OAMSR,mBAAS,MANlB,mBAMRS,EANQ,KAMFC,EANE,OAOeV,mBAAS,IAPxB,mBAORW,EAPQ,KAOCC,EAPD,KAUTC,EAAgBC,wBAAc,CAChCC,MAAO,yBAILC,EAAa,SAACC,GAChBpB,IAAMqB,MAAMD,EAAS,CACjBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAiDlB,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GAETf,EAMF,kBAACc,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,KAJvB,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClB,yBAAKC,UAAU,eAAeC,IAAI,yBAAyBC,IAAI,kBAMnE,kBAACP,EAAA,EAAD,CAAME,MAAI,EAACM,GAAI,GAAIC,GAAI,GAAIN,GAAI,EAAGC,GAAI,GAG9BlB,EAEA,yBAAKmB,UAAU,kBAAkBC,IAAI,4BAA4BC,IAAI,oBAErE,8BAIJ,yBAAKF,UAAU,kBACX,wBAAIA,UAAU,kBAAd,WACA,uCACA,6BACA,2BACAA,UAAU,UACVK,MAAOpC,EACPqC,SAAU,SAACC,GAAKrC,EAAQqC,EAAEC,OAAOH,UACjC,wCACA,6BACA,2BACAL,UAAU,UACVK,MAAOlC,EACPmC,SAAU,SAACC,GAAKnC,EAASmC,EAAEC,OAAOH,UAClC,2CACA,6BACA,2BACAL,UAAU,UACVS,KAAK,WACLJ,MAAOhC,EACPiC,SAAU,SAACC,GAAKjC,EAAYiC,EAAEC,OAAOH,UACrC,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAACc,QAAS,GACrB,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACM,GAAI,EAAGC,GAAI,EAAGN,GAAI,EAAGC,GAAI,GAChC,yCACA,6BACA,2BACAC,UAAU,UACVK,MAAO9B,EACP+B,SAAU,SAACC,GAAK/B,EAAU+B,EAAEC,OAAOH,WAEvC,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACM,GAAI,EAAGC,GAAI,EAAGN,GAAI,EAAGC,GAAI,GAChC,uCACA,6BACA,2BACAU,KAAK,SACLT,UAAU,UACVK,MAAO5B,EACP6B,SAAU,SAACC,GAAK7B,EAAQiC,OAAOJ,EAAEC,OAAOH,aAGhD,+CACA,6BACA,2BACAL,UAAU,UACVK,MAAO1B,EACP2B,SAAU,SAACC,GAAK3B,EAAW2B,EAAEC,OAAOH,UACpC,4BACAL,UAAU,wBACVY,QAAS,YAnHR,WAEb,GAAY,KAAT3C,EACC,GAAW,KAARE,EAAW,CAEC,6JACL0C,KAAK1C,GACO,KAAXE,EACa,KAATE,EACW,KAAPE,EACc,KAAVE,EACCd,IAAMiD,QAAQ,gBAAiB,CAC3B3B,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGdV,EAAW,6BAGfA,EAAW,qBAGfA,EAAW,4BAGfA,EAAW,yBAGhBA,EAAW,yBAGdA,EAAW,2BAIfA,EAAW,qBA2EW+B,KAFd,kBAGA,uBAAGf,UAAU,yBAAb,mBAAqD,0BAAMA,UAAU,eAAhB,gB,gCCtJ5DgB,G,YAAb,uKAGM,OACA,yBAAKhB,UAAU,iBACb,0BAAMiB,IAAI,aAAaC,KAAK,uFAC5B,yBAAKC,GAAG,SACN,0BAAMC,OAAO,MAAMC,OAAO,GAAGrB,UAAU,eACrC,yBAAKsB,MAAM,cACT,yBAAKA,MAAM,aACT,2BAAOb,KAAK,OAAOc,YAAY,iBAAiBvB,UAAU,cAAcwB,UAAQ,KAElF,yBAAKF,MAAM,aAAaH,GAAG,WACzB,4BAAQV,KAAK,SAAST,UAAU,aAChC,yBAAKmB,GAAG,aACR,yCAfhB,GAA+BM,cCElBC,EAAb,uKAGI,OACI,yBAAK1B,UAAU,OACX,yBAAKA,UAAU,QACX,yBAAKmB,GAAG,SAASnB,UAAU,OACvB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,uBAAGkB,KAAK,SACJ,yBAAKlB,UAAU,eAAgBC,IAAI,4BAA4BC,IAAI,oBAI/E,yBAAKF,UAAU,YACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,QAIR,yBAAKsB,MAAM,YACP,yBAAKA,MAAM,YACP,yBAAKtB,UAAU,mBACX,yBAAKA,UAAU,cAAeC,IAAI,2BAA2BC,IAAI,mBAErE,yBAAKF,UAAU,eACX,4BAAQA,UAAU,eAAc,iDA1BhE,GAA4ByB,aCDfE,G,MAAb,uKAGM,OACI,yBAAK3B,UAAU,OACZ,kBAAC,EAAD,MACA,yBAAKA,UAAU,YAEb,yBAAKA,UAAU,aAAaC,IAAI,uBAAuBC,IAAI,iBAE3D,yBAAKF,UAAU,cAAcC,IAAI,uBAAuBC,IAAI,iBAE5D,4BAAQF,UAAU,cAAlB,wBAZf,GAA8ByB,c,MCG9B5D,IAAMC,YAEN,IAiHe8D,EAjHA,WAAK,MAGU5D,mBAAS,IAHnB,mBAGTG,EAHS,KAGFC,EAHE,OAIgBJ,mBAAS,IAJzB,mBAITK,EAJS,KAICC,EAJD,KAOVO,EAAgBC,wBAAc,CAChCC,MAAO,yBAILC,EAAa,SAACC,GAChBpB,IAAMqB,MAAMD,EAAS,CACjBE,SAAU,aACVC,UAAW,IACXE,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAwBlB,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GAGNf,EAMD,kBAACc,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,KAJvB,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClB,yBAAKC,UAAU,eAAeC,IAAI,yBAAyBC,IAAI,kBAMvE,kBAACP,EAAA,EAAD,CAAME,MAAI,EAACM,GAAI,GAAIC,GAAI,GAAIN,GAAI,EAAGC,GAAI,GAG7BlB,EAID,yBAAKmB,UAAU,kBAAkBC,IAAI,4BAA4BC,IAAI,oBAFrE,8BAMJ,yBAAKF,UAAU,kBACX,wBAAIA,UAAU,kBAAd,WAGA,yBAAKA,UAAU,eACX,2CAGA,6BACA,2BACIA,UAAU,UACVK,MAAOlC,EACPmC,SAAU,SAACC,GAAKnC,EAASmC,EAAEC,OAAOH,UAGtC,2CAGA,6BACA,2BACIL,UAAU,UACVS,KAAK,WACLJ,MAAOhC,EACPiC,SAAU,SAACC,GAAKjC,EAAYiC,EAAEC,OAAOH,UAEzC,6BAEA,4BACIL,UAAU,iBACVS,KAAK,SACLG,QAAS,YAzEhB,WAET,GAAW,KAARzC,EAAW,CAEU,4JACL0C,KAAK1C,GACF,KAAXE,GAGCW,EAAW,yBAGhBA,EAAW,sCAGdA,EAAW,sBA0De+B,KAHlB,YAOA,uBAAGf,UAAU,yBAAb,cACe,uBAAGkB,KAAK,UAAUlB,UAAU,eAA5B,iBCpFxB6B,MAlBf,WACE,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUpE,MAAOA,GACf,yBAAKuC,UAAU,OACb,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8B,KAAK,UAAUC,UAAWhE,IACjC,kBAAC,IAAD,CAAO+D,KAAK,YAAYC,UAAWJ,IACnC,kBAAC,IAAD,CAAOG,KAAK,UAAUC,UAAWH,UCNzBI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9D,GACL+D,QAAQ/D,MAAMA,EAAMD,c","file":"static/js/main.920a4447.chunk.js","sourcesContent":["import thunk from 'redux-thunk';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\n\n// Combine 'root' reducer\nconst rootReducer = combineReducers({\n    // Add reducers\n})\n\n// Initial state\nconst initialState = {};\n\n// Middleware for handling async function\nconst middleware = [thunk]\n\n// Store\nconst store = createStore(\n    rootReducer,\n    initialState,\n    // Dev tools for viewing redux state and changes in chrome\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import React, { useState } from 'react';\nimport './SignUp.css';\nimport { useMediaQuery } from 'react-responsive';\nimport Grid from '@material-ui/core/Grid';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nconst SignUp = ()=>{\n    //STATE HOOKS FOR INPUT DETAILS\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [course, setCourse] = useState(\"\");\n    const [year, setYear] = useState(2021);\n    const [college, setCollege] = useState(\"\");\n\n    //CHECK WHETHER THE SCREEN IS SMALL OR NOT\n    const isSmallScreen = useMediaQuery({\n        query: '(max-width: 959.5px)'\n    });\n\n    //TOAST TO DISPLAY FOR INVALID INPUTS WITH CUSTOM MESSAGE PARAMETER\n    const errorToast = (message)=>{\n        toast.error(message, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        }); \n    };\n    \n    //FUNCTION TO DO APPROPRIATE TASK ON CLICKING SUBMIT BUTTON\n    const PostData = ()=>{\n        //CONDITIONS TO CHECK VALID INPUT DETAILS\n        if(name !== \"\"){\n            if(email!==\"\"){\n                // eslint-disable-next-line\n                const re = /^(([^<>()[\\]\\\\.,;:\"\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                if(re.test(email)){\n                    if(password!==\"\"){\n                        if(course!==\"\"){\n                            if(year!==\"\"){\n                                if(college!==\"\"){\n                                    toast.success(\"Valid details\", {\n                                        position: \"top-right\",\n                                        autoClose: 2000 ,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                    });\n                                }else{\n                                    errorToast(\"Please enter college name\");\n                                }\n                            }else{\n                                errorToast(\"Please enter year\");\n                            }\n                        }else{\n                            errorToast(\"Please enter course name\");\n                        }\n                    }else{\n                        errorToast(\"Please enter password\");\n                    }\n                }else{\n                   errorToast(\"Invalid email id\"); \n                }\n            }else{\n                errorToast(\"Please enter email\");\n            }\n            \n        }else{\n            errorToast(\"Please enter name\");\n        }\n    };\n\n    return(\n        <Grid container>\n            {/* SHOW THE SIDE IMAGE ONLY ON LARGE WIDTH SCREENS */}\n            {!isSmallScreen\n            ?\n            <Grid item md={6} lg={6}>\n                <img className=\"signup_image\" src=\"./images/Formimage.png\" alt=\"signup_image\"></img>\n            </Grid>\n            :\n            <Grid item md={12} lg={12}></Grid>\n            }\n            \n            <Grid item xs={12} sm={12} md={6} lg={6}>\n                {/* SHOW KURAKOO LOGO RATHER THAN IMAGE ON SMALL SCREENS */}\n                {\n                    isSmallScreen\n                    ?\n                    <img className=\"mobile_logo_img\" src=\"./images/kurakoo-logo.png\" alt=\"mobile_logo_img\"></img>\n                    :\n                    <div></div>\n                }\n\n                {/* //INPUT CONTENT */}\n                <div className=\"common_content\">\n                    <h1 className=\"signup_heading\">Sign up</h1>\n                    <label>Name</label>\n                    <br></br>\n                    <input \n                    className=\"text_ip\"\n                    value={name}\n                    onChange={(e)=>{setName(e.target.value)}}></input>\n                    <label>Email</label>\n                    <br></br>\n                    <input \n                    className=\"text_ip\"\n                    value={email}\n                    onChange={(e)=>{setEmail(e.target.value)}}></input>\n                    <label>Password</label>\n                    <br></br>\n                    <input \n                    className=\"text_ip\" \n                    type=\"password\"\n                    value={password}\n                    onChange={(e)=>{setPassword(e.target.value)}}></input>\n                    <Grid container spacing={4}>\n                        <Grid item xs={6} sm={6} md={6} lg={6}>\n                            <label>Course</label>\n                            <br></br>\n                            <input \n                            className=\"text_ip\"\n                            value={course}\n                            onChange={(e)=>{setCourse(e.target.value)}}></input>\n                        </Grid>\n                        <Grid item xs={6} sm={6} md={6} lg={6}>\n                            <label>Year</label>\n                            <br></br>\n                            <input \n                            type=\"number\" \n                            className=\"text_ip\"\n                            value={year}\n                            onChange={(e)=>{setYear(Number(e.target.value))}}></input>\n                        </Grid>\n                    </Grid>\n                    <label>College Name</label>\n                    <br></br>\n                    <input \n                    className=\"text_ip\"\n                    value={college}\n                    onChange={(e)=>{setCollege(e.target.value)}}></input>\n                    <button \n                    className=\"create_account_button\"\n                    onClick={()=>{PostData()}}>Create account</button>\n                    <p className=\"signup_signin_message\">Already a user? <span className=\"signin_link\">Sign in</span></p>\n                </div>\n            </Grid>\n            \n        </Grid>\n    );\n};\n\nexport default SignUp;","import React, { Component } from \"react\";\nimport './SearchBar.css'\n\nexport class SearchBar extends Component {\n\n    render() {\n      return (\n      <div className=\"Searchbar_nav\">\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n        <div id=\"cover\">\n          <form method=\"get\" action=\"\" className=\"form_search\">\n            <div class=\"search_div\">\n              <div class=\"input_box\">\n                <input type=\"text\" placeholder=\"Search Kurakoo\" className=\"input_class\" required />\n              </div>\n              <div class=\"search_div\" id=\"s-cover\">\n                <button type=\"submit\" className=\"btn_class\">\n                <div id=\"s-circle\"></div>\n                <span></span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      );\n    }\n  }\n","import React, { Component } from \"react\";\nimport \"./NavBar.css\";\nimport { SearchBar } from '../searchbar/SearchBar';\n\n\nexport class Navbar extends Component {\n\n  render() {\n    return (\n        <div className=\"Nav\">\n            <div className=\"nav1\">\n                <div id=\"navbar\" className=\"row\">\n                    <div className=\"col col1\">\n                        <div className=\"logo_nav\">\n                            <a href=\"#home\">\n                                <img className=\"logo_kurakoo\"  src=\"./images/kurakoo-logo.png\" alt=\"kurakoo_logo\"/>\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"col col2\">\n                        <div className=\"seachbar_nav\">\n                            <SearchBar />\n                        </div>\n                    </div>\n\n                    <div class=\"col col4\">\n                        <div class=\"sign_nav\">\n                            <div className=\"col profile_div\">\n                                <img className=\"profile_img\"  src=\"./images/profile_pic.jpg\" alt=\"progile_image\"/>\n                            </div>\n                            <div className=\"col btn_div\">\n                                <button className=\"sign_in_btn\"><b>Sign In</b></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Navbar } from '../navbar/Navbar';\nimport './FeedPage.css'\n\nexport class FeedPage extends Component {\n\n    render() {\n      return (\n          <div className=\"Nav\">\n             <Navbar/>\n             <div className=\"haeder_i\">\n            \n               <img className=\"header_img\" src=\"./images/Group_5.png\" alt=\"haeder_image\"></img>\n               \n               <img className=\"header_img1\" src=\"./images/Group_4.png\" alt=\"haeder_image\"></img>\n          \n               <button className=\"header_btn\">Ask a Question</button>\n             </div>\n\n          </div>\n      );\n    }\n  }\n","import React, { useState } from 'react';\nimport './SignIn.css';\nimport { useMediaQuery } from 'react-responsive';\nimport Grid from '@material-ui/core/Grid';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nconst SignIn = () =>{\n\n    //STATE HOOKS FOR INPUT DETAILS\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    //CHECK WHETHER THE SCREEN IS SMALL OR NOT\n    const isSmallScreen = useMediaQuery({\n        query: '(max-width: 959.5px)'\n    });\n\n    //TOAST TO DISPLAY FOR INVALID INPUTS WITH CUSTOM MESSAGE PARAMETER\n    const errorToast = (message)=>{\n        toast.error(message, {\n            position: \"top-center\",\n            autoClose: 3000,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        }); \n    };\n    \n    //FUNCTION TO DO APPROPRIATE TASK ON CLICKING SUBMIT BUTTON\n    const PostData = ()=>{\n        //CONDITIONS TO CHECK VALID INPUT DETAILS\n            if(email!==\"\"){\n                // eslint-disable-next-line\n                const valid_email = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                if(valid_email.test(email)){\n                    if(password!==\"\"){\n                        //Code to perform authentication via an api         \n                    }else{\n                        errorToast(\"Please enter password\");\n                    }\n                }else{\n                   errorToast(\"Please enter a valid email id\"); \n                }\n            }else{\n                errorToast(\"Please enter email\");\n            }\n    };\n\n    return(\n        <Grid container>\n            {/* SHOW THE SIDE IMAGE ONLY ON LARGE WIDTH SCREENS */}\n            {\n                !isSmallScreen\n                ?\n                <Grid item md={6} lg={6}>\n                    <img className=\"signin_image\" src=\"./images/Formimage.png\" alt=\"signin_image\"></img>\n                </Grid>\n                :\n                <Grid item md={12} lg={12}></Grid>\n            }\n            \n            <Grid item xs={12} sm={12} md={6} lg={6}>\n                {/* SHOW KURAKOO LOGO RATHER THAN IMAGE ON SMALL SCREENS */}\n                {\n                    !isSmallScreen\n                    ?\n                    <div></div>\n                    :\n                    <img className=\"mobile_logo_img\" src=\"./images/kurakoo-logo.png\" alt=\"mobile_logo_img\"></img>\n                }\n\n                {/* Form to take input */}\n                <div className=\"common_content\">\n                    <h1 className=\"signin_heading\">\n                        Sign In\n                    </h1>\n                    <div className=\"signin_form\">\n                        <label>\n                            Email id\n                        </label>\n                        <br></br>\n                        <input \n                            className=\"text_ip\"\n                            value={email}\n                            onChange={(e)=>{setEmail(e.target.value)}} \n                        />\n\n                        <label>\n                            Password\n                        </label>\n                        <br></br>\n                        <input \n                            className=\"text_ip\" \n                            type=\"password\"\n                            value={password}\n                            onChange={(e)=>{setPassword(e.target.value)}} \n                        />\n                        <br></br>\n\n                        <button \n                            className=\"sign_in_button\"\n                            type=\"submit\"\n                            onClick={()=>{PostData()}}\n                        >\n                            Continue\n                        </button>\n                        <p className=\"signup_signin_message\">\n                            New User ? <a href=\"/signup\" className=\"signup_link\">Sign up</a>\n                        </p>\n                    </div>\n                    \n                </div>\n            </Grid>\n            \n        </Grid>\n    );\n};\n\nexport default SignIn;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport store from './store/store';\nimport SignUp from './Component/SignUp/SignUp';\nimport { FeedPage } from './Component/feedpage/FeedPage';\nimport SignIn from \"./Component/SignIn/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Provider store={store}>\n      <div className=\"App\">\n        <div>\n          <Switch>\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/feedpage\" component={FeedPage} />\n            <Route path=\"/signin\" component={SignIn} />\n          </Switch>\n        </div>\n      </div>\n    </Provider> \n    </BrowserRouter>   \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}